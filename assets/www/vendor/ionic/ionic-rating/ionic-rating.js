// Generated by CoffeeScript 1.9.1
(function () {
    angular.module('ionic.rating', []).constant('ratingConfig', {
        max: 5
    }).controller('RatingController', function ($scope, $element, $attrs, ratingConfig) {
        var ngModelCtrl;
        ngModelCtrl = {
            $setViewValue: angular.noop
        };
        this.init = function (ngModelCtrl_) {
            var max, ratingStates;
            ngModelCtrl = ngModelCtrl_;
            ngModelCtrl.$modelValue = Math.ceil(ngModelCtrl.$modelValue*10)*1.0/10;
            ngModelCtrl.$render = this.render;
            if($attrs.showLabel != 'false'){
                $scope.label = ngModelCtrl.$modelValue+"åˆ†";
            }
            max = angular.isDefined($attrs.max) ? $scope.$parent.$eval($attrs.max) : ratingConfig.max;
            return $scope.range = this.buildTemplateObjects(ngModelCtrl.$modelValue, max);
        };
        this.buildTemplateObjects = function (stateValue, max) {
            var i, states = [];

            for (i = 0; i < max; i++) {
                if (stateValue > i && stateValue < i + 1)
                    states[i] = stateValue-i;
                else if (stateValue > i)
                    states[i] = 1;
                else
                    states[i] = 0;
            }

            return states;
        };
        $scope.rate = function (value) {
            if (!$scope.readonly && value >= 0 && value <= $scope.range.length) {
                ngModelCtrl.$setViewValue(value);
                //return ngModelCtrl.$render();
            }
        };
        $scope.onKeydown = function (evt) {
            if (/(37|38|39|40)/.test(evt.which)) {
                evt.preventDefault();
                evt.stopPropagation();
                return $scope.rate($scope.value + (evt.which === 38 || evt.which === 39 ? {
                        1: -1
                    } : void 0));
            }
        };
        this.render = function () {
            return $scope.value = ngModelCtrl.$viewValue;
        };
        return this;
    }).directive('rating', function ($timeout) {
        return {
            restrict: 'EA',
            require: ['rating', 'ngModel'],
            scope: {
                readonly: '=?',
                ngModel: '='
            },
            controller: 'RatingController',
            template: '<div ng-keydown="onKeydown($event)"><div class="iconfont rating" ng-repeat="r in range track by $index" ng-click="rate($index + 1)"><span class="iconfont rating" ng-style="{width: (r * 100) + \'%\'}" style="width: 100%;"></div><span class="rating-label">{{label}}</span></div>',
            replace: true,
            link: function (scope, element, attrs, ctrls) {
                var ngModelCtrl, ratingCtrl;
                ratingCtrl = ctrls[0];
                ngModelCtrl = ctrls[1];

                scope.$watch('ngModel', function (newVal, oldVal) {
                    if (newVal) {
                        ratingCtrl.init(ngModelCtrl)
                    }
                });
                //if (ngModelCtrl.$modelValue) {
                //  $timeout(function(){
                //  return ratingCtrl.init(ngModelCtrl);
                //  })
                //}
            }
        };
    });

}).call(this);